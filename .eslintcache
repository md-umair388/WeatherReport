[{"F:\\ReactJs\\demo\\src\\index.js":"1","F:\\ReactJs\\demo\\src\\App.js":"2","F:\\ReactJs\\demo\\src\\reportWebVitals.js":"3","F:\\ReactJs\\demo\\src\\components\\ColorChange\\ColorChange.js":"4","F:\\ReactJs\\demo\\src\\components\\WheatherCard\\component.js":"5","F:\\ReactJs\\demo\\src\\components\\WheatherCard\\location.js":"6","F:\\ReactJs\\demo\\src\\components\\WheatherCard\\Location.js":"7","F:\\ReactJs\\demo\\src\\components\\WheatherCard\\Condition.js":"8","F:\\ReactJs\\demo\\src\\components\\WheatherCard\\Icon.js":"9","F:\\ReactJs\\demo\\src\\components\\WeatherEngine.js":"10"},{"size":288,"mtime":1608090520039,"results":"11","hashOfConfig":"12"},{"size":435,"mtime":1608116901055,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3471,"mtime":1608016953054,"results":"15","hashOfConfig":"12"},{"size":1480,"mtime":1608090392195,"results":"16","hashOfConfig":"12"},{"size":559,"mtime":1608036219244,"results":"17","hashOfConfig":"12"},{"size":2467,"mtime":1608090571560,"results":"18","hashOfConfig":"12"},{"size":900,"mtime":1608090584673,"results":"19","hashOfConfig":"12"},{"size":1200,"mtime":1608090597531,"results":"20","hashOfConfig":"12"},{"size":1896,"mtime":1608092198495,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ikjtin",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"F:\\ReactJs\\demo\\src\\index.js",[],["44","45"],"F:\\ReactJs\\demo\\src\\App.js",[],"F:\\ReactJs\\demo\\src\\reportWebVitals.js",[],"F:\\ReactJs\\demo\\src\\components\\ColorChange\\ColorChange.js",[],"F:\\ReactJs\\demo\\src\\components\\WheatherCard\\component.js",[],"F:\\ReactJs\\demo\\src\\components\\WheatherCard\\location.js",[],"F:\\ReactJs\\demo\\src\\components\\WheatherCard\\Location.js",[],"F:\\ReactJs\\demo\\src\\components\\WheatherCard\\Condition.js",[],"F:\\ReactJs\\demo\\src\\components\\WheatherCard\\Icon.js",[],"F:\\ReactJs\\demo\\src\\components\\WeatherEngine.js",["46"],"import React, { useState, useEffect } from \"react\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport WeatherCard from \"./WheatherCard/component\";\r\n\r\nconst WeatherEngine = ({ location }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [weather, setWeather] = useState({\r\n    temp: null,\r\n    city: null,\r\n    condition: null,\r\n    country: null,\r\n  });\r\n\r\n  const getWeather = async (q) => {\r\n    setQuery(\"\");\r\n    setLoading(true);\r\n    try {\r\n      const apiRes = await fetch(\r\n        `http://api.openweathermap.org/data/2.5/weather?q=${q}&units=metric&APPID=c80b69787ac9c776d1cf86f8a6c50ce7`\r\n      );\r\n      const resJSON = await apiRes.json();\r\n      setWeather({\r\n        temp: resJSON.main.temp,\r\n        city: resJSON.name,\r\n        condition: resJSON.weather[0].main,\r\n        country: resJSON.sys.country,\r\n      });\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeather(location);\r\n  }, [location]);\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ color: \"black\" }}>\r\n        There has been an error!\r\n        <br />\r\n        <button onClick={() => setError(false)}>Reset!</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: \"black\",\r\n          width: \"200px\",\r\n          height: \"240px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <PulseLoader color=\"purple\" size={10} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WeatherCard\r\n      temp={weather.temp}\r\n      condition={weather.condition}\r\n      city={weather.city}\r\n      country={weather.country}\r\n      getWeather={getWeather}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WeatherEngine;\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":7,"column":10,"nodeType":"53","messageId":"54","endLine":7,"endColumn":15},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'query' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]